[tox]
envlist =
    py27
    py27-flask
    py{36,37,38}
    {py36,py37,py38}-flask
    {py36,py37,py38}-django
    coverage

[testenv]
PIP_INDEX_URL=https://:2021-10-18T12:15:12.828950Z@time-machines-pypi.sealsecurity.io/
setenv =
    TESTPATH=tests/core
    RCFILE=setup.cfg
    py3: TESTPATH=tests/py3
    flask: TESTPATH=tests/flask
    django: TESTPATH=tests/django
    PIP_INDEX_URL=https://:2021-10-18T12:15:12.828950Z@time-machines-pypi.sealsecurity.io/

deps =
    -rrequirements-test.txt
    flask: Flask
    flask: Flask-SQLAlchemy
    py3: httpx
    py3: pytest-asyncio
    py3: starlette
    py3: itsdangerous
    py3: werkzeug
    django: Django
    django: pytest-django

commands =
    coverage run --rcfile={env:RCFILE} --source=authlib -p -m pytest {env:TESTPATH}

[testenv:py27]
setenv =
    TESTPATH=tests/core
    RCFILE=.py27conf
deps =
    -rrequirements-test.txt
    unittest2

commands =
    coverage run --rcfile={env:RCFILE} --source=authlib -p -m pytest {env:TESTPATH}

[testenv:py27-flask]
setenv =
    TESTPATH=tests/flask
    RCFILE=.py27conf
deps =
    -rrequirements-test.txt
    unittest2
    Flask
    Flask-SQLAlchemy

commands =
    coverage run --rcfile={env:RCFILE} --source=authlib -p -m pytest {env:TESTPATH}

[testenv:coverage]
skip_install = true
commands =
    coverage combine
    coverage report
    coverage html
